  Orocos Component Library
  ========================

NOTE - The Orocos Component Library is now part of the 
Orocos Toolchain and should seldomly be installed
separately. Install the Orocos Toolchain instead.


Installation Details
====================

For the minimal ocl library, do

  tar -xjvf orocos-ocl-<version>-src.tar.bz2
  cd orocos-ocl-<version>
  CMAKE_PREFIX_PATH=/opt/orocos cmake .

Where CMAKE_PREFIX_PATH contains the installation directory of 
the Orocos libraries. It is set to ../install in case you do
a toolchain build.

If all dependencies could be found, a Makefile is generated and you
can type:

  make
  make install

If you have some of the ocl dependencies installed in non-standard
locations, you have to specify this using environment variables:

 * Header locations using the CMAKE_INCLUDE_PATH variable.
 * Library locations using CMAKE_LIBRARY_PATH.
 * /opt -like locations using CMAKE_PREFIX_PATH (looks for libs, headers, binaries).

E.g. using bash and fink in Mac OS X, the boost library headers are
installed in /sw/include, so you would specify 

export CMAKE_INCLUDE_PATH=/sw/include

before running cmake.

Installation options
--------------------

* Orocos uses cmake (http://www.cmake.org) for its build configuration.
  CMake is a cross-platform build system. Use version 2.6.3 or later

* This library requires that the Orocos RTT (liborocos-rtt) is installed
  (path in CMAKE_PREFIX_PATH).

* You can set the installation path in the CMAKE_INSTALL_PREFIX variable
  using ccmake.

* You can additionally

  1) do out-of-source builds:

	$ mkdir build
	$ cd build
	$ cmake ..
	$ make

  2) set a different compiler:

	$ CC="distcc gcc-3.3" CXX="distcc g++-3.3" cmake ..

  3) use the GUI Configurator:

	Use 'ccmake' or 'cmake-gui' rather than 'cmake' for a text-based configurator

  4) have packaging support:

	$ make install DESTDIR=/staging/dir
